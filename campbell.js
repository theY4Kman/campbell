// Generated by CoffeeScript 1.6.1
(function() {
  var $distilled_editor, $initial_editor, imSatisfied, initialModified, initial_id_prefix, newDistilledParagraph, newInitialParagraph, newReplacementParagraph, paragraph_counter, replacementModified, resizeInitial;

  paragraph_counter = 0;

  initial_id_prefix = 'initial';

  $distilled_editor = null;

  $initial_editor = null;

  newInitialParagraph = function(text) {
    var $initial;
    $initial = $('<p>');
    $initial.hallo();
    $initial.html(text);
    $initial.on('hallomodified', initialModified);
    $initial.attr('id', initial_id_prefix + paragraph_counter);
    paragraph_counter += 1;
    newDistilledParagraph($initial);
    resizeInitial($initial);
    return $initial;
  };

  newDistilledParagraph = function($initial) {
    var $container, $distilled, $previous;
    $distilled = $('<p>');
    $distilled.addClass('initial');
    $distilled.attr('id', 'distilled' + $initial.attr('id').substr(initial_id_prefix.length));
    $distilled.html($initial.html());
    $container = $('<div>');
    $container.data('initial', $initial);
    $container.append($distilled);
    $initial.data('distilled', $container);
    $initial.data('distilled-initial', $distilled);
    $distilled.on('click', function() {
      var $next, $replacement, $this;
      $this = $(this);
      $next = $this.next();
      $replacement = $next.is('.replacement') ? $next : void 0;
      if ($replacement == null) {
        $replacement = newReplacementParagraph($container);
        $this.after($replacement);
      }
      $replacement.focus();
      return resizeInitial($initial);
    });
    $previous = $initial.prev();
    if ($previous.length) {
      return $previous.data('distilled').after($container);
    } else {
      return $distilled_editor.append($container);
    }
  };

  newReplacementParagraph = function($distilled) {
    var $replacement;
    $replacement = $('<p>');
    $replacement.addClass('replacement');
    $replacement.hallo();
    $replacement.data('distilled', $distilled);
    $replacement.on('hallomodified', replacementModified);
    return $replacement;
  };

  replacementModified = function(evt, hallo_evt) {
    var $p, $this, after, before, newline_html_content, newline_idx;
    $this = $(this);
    newline_html_content = '<div>';
    newline_idx = hallo_evt.content.indexOf(newline_html_content);
    if (newline_idx >= 0) {
      before = hallo_evt.content.substring(0, newline_idx);
      after = $this.find('div').text();
      $this.html(before);
      $p = newReplacementParagraph($this.data('distilled'));
      $p.html(after);
      $this.after($p);
      $p.focus();
    }
    return resizeInitial($this.data('distilled').data('initial'));
  };

  initialModified = function(evt, hallo_evt) {
    var $p, $this, after, before, newline_html_content, newline_idx;
    $this = $(this);
    newline_html_content = '<div>';
    newline_idx = hallo_evt.content.indexOf(newline_html_content);
    if (newline_idx >= 0) {
      before = hallo_evt.content.substring(0, newline_idx);
      after = $this.find('div').text();
      $this.html(before);
      $p = newInitialParagraph(after);
      $this.after($p);
      $p.focus();
    }
    $this.data('distilled-initial').html($this.html());
    return resizeInitial($this);
  };

  imSatisfied = function() {
    var $containers;
    $initial_editor.empty();
    $containers = $distilled_editor.children();
    $containers.remove();
    $containers.each(function() {
      var $initial, $replacements, $this, initial_text, replacements;
      $this = $(this);
      $replacements = $this.children('.replacement');
      replacements = [];
      $replacements.each(function() {
        var text;
        text = $(this).html();
        if (text) {
          return replacements.push(text);
        }
      });
      if (replacements.length === 0) {
        initial_text = $this.children('.initial').html();
        if (initial_text) {
          $initial = newInitialParagraph(initial_text);
          return $initial_editor.append($initial);
        }
      } else {
        return $.each(replacements, function() {
          $initial = newInitialParagraph(this);
          return $initial_editor.append($initial);
        });
      }
    });
    if ($initial_editor.children().length === 0) {
      return newInitialParagraph().appendTo($initial_editor);
    }
  };

  resizeInitial = function($initial) {
    var $distilled_container;
    $distilled_container = $initial.data('distilled');
    return $initial.height($distilled_container.height());
  };

  $(function() {
    $distilled_editor = $('#distilled');
    $initial_editor = $('#initial');
    newInitialParagraph().appendTo($initial_editor);
    return $('#satisfied').click(imSatisfied);
  });

}).call(this);
